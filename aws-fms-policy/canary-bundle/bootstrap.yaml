Parameters:

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

Conditions:
  IsVantaPolicyEnabled:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'us-east-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'eu-west-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'us-west-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ap-southeast-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ap-northeast-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'us-west-2'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'sa-east-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ap-southeast-2'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'eu-central-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ap-northeast-2'
      - Fn::Or:
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ap-south-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'us-east-2'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ca-central-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'eu-west-2'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'eu-west-3'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ap-northeast-3'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'eu-north-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'ap-east-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'me-south-1'
      - Fn::Or:
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'eu-south-1'
          - Fn::Equals:
              - !Ref 'AWS::Region'
              - 'af-south-1'

Resources:
  LambdaWaiter:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "index.handler"
      Runtime: "nodejs16.x"
      Timeout: 900
      Role: !ImportValue LambdaExecutionRole
      Code:
        ZipFile:
          !Sub |
            exports.handler = async function(event, context) {
              var response = require('cfn-response');
              var waitTimeSeconds = event.ResourceProperties.WaitSeconds;
              var waitTime = waitTimeSeconds * 1000;
              var attmeptCount = 3;
              var fakeContext = {
                logStreamName: context.logStreamName,
                done: function() {}
              }
              console.log("Starting initial wait period");
              await new Promise(resolve => setTimeout(resolve, waitTime));
              for (var i = 1; i <= attmeptCount; i++) {
                console.log("Attempt " + i);
                response.send(event, fakeContext, response.SUCCESS, {}, "Waiter-" + waitTimeSeconds + "-Seconds");
                await new Promise(resolve => setTimeout(resolve, 10 * 1000));
              }
              context.done();
            };

  InspectionVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Inspection-VPC'

  VantaStatelessRuleGroup:
    Condition: IsVantaPolicyEnabled
    Type: AWS::NetworkFirewall::RuleGroup
    Properties:
      RuleGroupName: VantaStatelessRuleGroup
      Type: STATELESS
      RuleGroup:
        RulesSource:
          StatelessRulesAndCustomActions:
            StatelessRules:
              - RuleDefinition:
                  MatchAttributes:
                    Sources:
                        - "AddressDefinition": 0.0.0.0/0
                    Destinations:
                        - "AddressDefinition": 0.0.0.0/0
                  Actions:
                      - "aws:pass"
                Priority: 1
      Capacity: 100
      Description: CF Canary Vanta Stateless Rule Group

  VantaStatefulRuleGroup:
    Condition: IsVantaPolicyEnabled
    Type: AWS::NetworkFirewall::RuleGroup
    Properties:
      RuleGroupName: VantaStatefulRuleGroup
      Type: STATEFUL
      RuleGroup:
        RulesSource:
          RulesString: >-
            pass tcp 10.20.20.0/24 45400:45500 <> 10.10.10.0/24 5203
            (msg:"test";sid:1;rev:1;)
      Capacity: 100
      Description: CF Canary Vanta Stateful Rule Group


Outputs:
  LambdaWaiter:
    Value: !GetAtt LambdaWaiter.Arn
    Export:
      Name: LambdaWaiter

  AvailabilityZone:
    Value: !Select
      - 0
      - !GetAZs
        Ref: 'AWS::Region'
    Export:
      Name: AvailabilityZone

  InspectionVPC:
    Value: !Ref InspectionVPC
    Description: A reference to the created inspection VPC
    Export:
      Name: InspectionVPC

  VantaStatelessRuleGroup:
    Condition: IsVantaPolicyEnabled
    Value: !Ref VantaStatelessRuleGroup
    Description: A reference to the vanta stateless rule group
    Export:
      Name: VantaStatelessRuleGroup

  VantaStatefulRuleGroup:
    Condition: IsVantaPolicyEnabled
    Value: !Ref VantaStatefulRuleGroup
    Description: A reference to the vanta stateful rule group
    Export:
      Name: VantaStatefulRuleGroup